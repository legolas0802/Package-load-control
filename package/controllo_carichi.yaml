homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'Controllo Carichi V1.1'
        author: 'Mauro Cimino'
        reference: 'www.hassiohelp.eu'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false
    
    input_text.esclusione_1_riaccensione:
      <<: *customize
    input_text.esclusione_2_riaccensione:
      <<: *customize
    input_select.carico_1:
      <<: *customize
    input_select.carico_2:
      <<: *customize
    input_select.carico_3:
      <<: *customize
    input_select.carico_4:
      <<: *customize
    input_select.carico_5:
      <<: *customize
    input_select.carico_6:
      <<: *customize
    input_text.carico_7:
      <<: *customize
    input_select.carico_8:
      <<: *customize
    input_select.carico_9:
      <<: *customize
    input_select.lista_carichi:
      <<: *customize
    input_select.selettore_kw_contatore:
      <<: *customize
    input_select.accensione_automatica_carico:
      <<: *customize
    input_number.tempo_intervento:
      <<: *customize
    input_boolean.check_accensione_automatica_carico:
      <<: *customize
    input_text.ultimo_carico:
      <<: *customize
    input_text.data_ultimo_intervento:
      <<: *customize
    sensor.data_ultimo_intervento:
      <<: *customize
      icon: mdi:calendar-range
    sensor.tempo_in_extraSoglia:
      <<: *customize
    sensor.ultimo_carico:
      <<: *customize
    sensor.ultimo_carico_spento:
      <<: *customize
      icon: mdi:power-plug-off
    sensor.esclusione_1:
      <<: *customize
    sensor.esclusione_2:
      <<: *customize
    sensor.potenza:
      <<: *customize
      icon: mdi:flash
    automation.aggiorna_lista_controllo_carichi:
      <<: *customize
    automation.innesco_controllo_carichi:
      <<: *customize
      icon: mdi:power
    automation.accensione_ultimo_carico_spento:
      <<: *customize
      icon: mdi:power-on
    automation.notifica_spegnimento_carico_hub:
      <<: *customize
      icon: mdi:bell-ring
    automation.notifica_accensione_carico_hub:
      <<: *customize
      icon: mdi:bell-ring
    script.spegni_carico:
      <<: *customize

################################################################

#                  PACKAGE CONTROLLO CARICHI V1.0              #

################################################################

input_select:
  carico_1:
    name: Carico Priorità 1
    icon: mdi:numeric-1-box-multiple-outline
    options: !secret carichi_controllati

  carico_2:
    name: Carico Priorità 2
    icon: mdi:numeric-2-box-multiple-outline 
    options: !secret carichi_controllati

  carico_3:
    name: Carico Priorità 3
    icon: mdi:numeric-3-box-multiple-outline
    options: !secret carichi_controllati

  carico_4:
    name: Carico Priorità 4
    icon: mdi:numeric-4-box-multiple-outline
    options: !secret carichi_controllati

  carico_5:
    name: Carico Priorità 5
    icon: mdi:numeric-5-box-multiple-outline
    options: !secret carichi_controllati

  carico_6:
    name: Carico Priorità 6
    icon: mdi:numeric-6-box-multiple-outline
    options: !secret carichi_controllati

  carico_7:
    name: Carico Priorità 7
    icon: mdi:numeric-7-box-multiple-outline
    options: !secret carichi_controllati

  carico_8:
    name: Carico Priorità 8
    icon: mdi:numeric-8-box-multiple-outline
    options: !secret carichi_controllati

  carico_9:
    name: Carico Priorità 9
    icon: mdi:numeric-9-box-multiple-outline
    options: !secret carichi_controllati

  esclusione_1_riaccensione:
    name: Escluso dalla Riaccensione
    icon: mdi:cancel
    options: !secret carichi_controllati
  
  esclusione_2_riaccensione:
    name: Escluso dalla Riaccensione
    icon: mdi:cancel
    options: !secret carichi_controllati

  selettore_kw_contatore:
    icon: mdi:beaker-outline
    options:
      - 3 kW
      - 4,5 kW
      - 6 kW
      - 10 kW

  lista_carichi:
    options: 
      - not_select

  accensione_automatica_carico:
    name: Soglia Accensione Carico (W)
    options:
      - 1000
      - 1500
      - 2000
      - 2500
      - 3000
      - 3500
      - 4000
      - 4500
      - 5000
      - 5500
      - 6000
      - 6500
      - 7000
      - 7500
      - 8000
      - 8500
      - 9000

input_number:
  tempo_intervento:
    name: Tempo D'intervento
    mode: box
    icon: mdi:timelapse
    min: 0
    max: 170
    step: 1

input_text:
  ultimo_carico:
    name: Ultimo Carico
  
  data_ultimo_intervento:
    name: Data ultimo intervento

input_boolean:
  check_accensione_automatica_carico:
    name: check accensione ultimo Carico spento
    initial: off

template:
    - sensor:
      - name: "Ultimo Carico"
        state: >-
            {%- for device in states -%}
            {%- if device.entity_id|lower == states('input_text.ultimo_carico')|lower -%}
            {{ device.name }}
            {%- endif -%}
            {%- endfor -%} 
        attributes:
          power: !secret sensore_potenza_totale
          utlimo_carico_entity: "{{states('input_text.ultimo_carico')}}"

      - name: "Data Ultimo Intervento"
        state: "{{states('input_text.data_ultimo_intervento')}}"
      
      - name: "Potenza"
        state: "{{ states(state_attr('sensor.ultimo_carico','power'))|float(0) }}"
        unit_of_measurement: W



################################################################
 
#                        AUTOMAZIONI                           #

################################################################
automation:
  - alias: aggiorna lista controllo carichi
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id:
        - input_select.carico_1
        - input_select.carico_2
        - input_select.carico_3
        - input_select.carico_4
        - input_select.carico_5
        - input_select.carico_6
        - input_select.carico_7
        - input_select.carico_8
        - input_select.carico_9
    - platform: homeassistant
      event: start
    action:
    - service: input_select.set_options
      data_template:
        entity_id: input_select.lista_carichi
        options: >-
              {%- macro lista_carico_entity() -%}
              {% set domains = states.switch | list + states.climate | list %}
              {% set carichi = states.input_select| selectattr('object_id', 'match', 'carico_.*') |map(attribute="state")|list %}
              {%- for element in carichi -%}
              {% if domains| selectattr('attributes.friendly_name', 'eq', element)
              | map(attribute="entity_id") |join(',') != "" %}
              "{{ domains| selectattr('attributes.friendly_name', 'eq', element)
              | map(attribute="entity_id") |join(',')}}",
               {% endif %}
              {% endfor %}
              {%- endmacro -%} 
              [{{ lista_carico_entity()}} "not_select"]
 

  - alias: innesco controllo carichi
    trigger:
    - platform: template
      value_template: >-
        {%- macro limite_kw() -%}
        {% if is_state("input_select.selettore_kw_contatore", "3 kW") %}
        3299
        {%-elif is_state("input_select.selettore_kw_contatore", "4,5 kW") %}
        4949
        {%-elif is_state("input_select.selettore_kw_contatore", "6 kW") %}
        6599
        {%-elif is_state("input_select.selettore_kw_contatore", "10 kW") %}
        10999
        {% endif %}
        {%- endmacro -%}
        {{(states('sensor.potenza'))|float(0) > limite_kw()|float(0) }}
      for:
        minutes: "{{ states('input_number.tempo_intervento')|int(0) }}"
    - platform: template
      value_template: >-
        {%- macro calcolo_soglia_instantanea() -%}
        {% if is_state("input_select.selettore_kw_contatore", "3 kW") %}
        3999
        {%-elif is_state("input_select.selettore_kw_contatore", "4,5 kW") %}
        5899
        {%-elif is_state("input_select.selettore_kw_contatore", "6 kW") %}
        7899
        {%-elif is_state("input_select.selettore_kw_contatore", "10 kW") %}
        12999
        {% endif %}
        {%- endmacro -%}
        {{(states('sensor.potenza'))|int(0) > calcolo_soglia_instantanea()|int }}
    action:
    - service: script.turn_on
      entity_id: script.spegni_carico

  - alias: accensione ultimo carico spento
    trigger:
    - platform: template
      value_template: "{{(states('sensor.potenza'))|float(0) <= states('input_select.accensione_automatica_carico')|float(0) }}"
    condition:
      - condition: state
        entity_id: input_boolean.check_accensione_automatica_carico
        state: 'on'
      - condition: template
        value_template: "{{states('input_select.esclusione_1_riaccensione') != states('sensor.ultimo_carico')}}"
      - condition: template
        value_template: "{{states('input_select.esclusione_2_riaccensione') != states('sensor.ultimo_carico')}}"
    action:
      - event: notifica_carico_acceso
      - service: input_boolean.turn_off
        entity_id: input_boolean.check_accensione_automatica_carico
      - service: homeassistant.turn_on
        data:
          entity_id:  "{{state_attr('sensor.ultimo_carico', 'utlimo_carico_entity')}}"

  - alias: notifica spegnimento carico hub
    id: notifica spegnimento carico hub
    trigger:
    - platform: event
      event_type: notifica_carico_spento
    action:
      - service: script.my_notify
        data:
          no_show: 1
          title: "Controllo Carichi"
          message: "il controllo carichi ha spento {{ states('sensor.ultimo_carico') }}"
          google: true

  - alias: notifica accensione carico hub
    id: notifica accensione carico hub
    trigger:
    - platform: event
      event_type: notifica_carico_acceso
    action:
      - service: script.my_notify
        data:
          no_show: 1
          title: "Controllo Carichi"
          message: "il controllo carichi ha acceso {{ states('sensor.ultimo_carico') }}"
          google: true

script:
  spegni_carico:
    sequence:
      repeat:
        while:
          - condition:  template
            value_template: >-
              {%- macro limite_kw() -%}
              {% if is_state("input_select.selettore_kw_contatore", "3 kW") %}
              3299
              {%-elif is_state("input_select.selettore_kw_contatore", "4,5 kW") %}
              4949
              {%-elif is_state("input_select.selettore_kw_contatore", "6 kW") %}
              6599
              {%-elif is_state("input_select.selettore_kw_contatore", "10 kW") %}
              10999
              {% endif %}
              {%- endmacro -%}
              {{(states('sensor.potenza'))|float(0) > limite_kw()|float(0) }}
        sequence:
          - service: input_text.set_value
            data:
              entity_id: input_text.ultimo_carico
              value: >-
                {%- macro spegni_primo_carico() -%}
                {%- set entity_carico_da_spegnere = states.input_select.lista_carichi.attributes.options|join(',')-%}
                {%- for item in entity_carico_da_spegnere.split(',') if (states(item) != 'off') and (item != '') and (states(item) != 'unavailable')-%}
                {{ item }}{% if not loop.last %},{% endif %}
                {%- endfor -%}
                {%- endmacro -%}  
                {{ spegni_primo_carico().split(',') | first }}
          - service: input_text.set_value
            data:
              entity_id: input_text.data_ultimo_intervento
              value: "{{ now().strftime('il %d/%m/%y alle %H:%M') }}"
          - service: homeassistant.turn_off
            data:
              entity_id: >-
                {%- macro spegni_primo_carico() -%}
                {%- set entity_carico_da_spegnere = states.input_select.lista_carichi.attributes.options|join(',')-%}
                {%- for item in entity_carico_da_spegnere.split(',') if (states(item) != 'off') and (item != '') and (states(item) != 'unavailable')-%}
                {{ item }}{% if not loop.last %},{% endif %}
                {%- endfor -%}
                {%- endmacro -%}  
                {{ spegni_primo_carico().split(',') | first }}
          - service:  input_boolean.turn_on
            entity_id: input_boolean.check_accensione_automatica_carico
          - event: notifica_carico_spento
          - delay:
              seconds: 30
